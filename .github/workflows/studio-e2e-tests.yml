name: Studio E2E Tests
on:
  push:
    branches: [master]
    paths:
      - 'packages/pg-meta/**/*'
      - 'apps/studio/**'
      - 'tests/studio-tests/**'
      - 'e2e/studio/**'
      - 'pnpm-lock.yaml'
  pull_request:
    branches: [master]
    paths:
      - 'packages/pg-meta/**/*'
      - 'apps/studio/**'
      - 'tests/studio-tests/**'
      - 'e2e/studio/**'
      - 'pnpm-lock.yaml'

# Cancel old builds on new commit for same workflow + branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    env:
      CI_EMAIL: ${{ secrets.CI_EMAIL }}
      CI_PASSWORD: ${{ secrets.CI_PASSWORD }}
      CI_PROJECT_REF: ${{ secrets.CI_PROJECT_REF }}
      IS_PLATFORM: true
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_STUDIO_HOSTED_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm i

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Create Vercel Local Config in Temp Directory
        run: |
          mkdir -p ${{ runner.temp }}/vercel_config
          echo '{ "projectId": "${{ secrets.VERCEL_STUDIO_HOSTED_PROJECT_ID }}", "orgId": "${{ secrets.VERCEL_ORG_ID }}" }' > ${{ runner.temp }}/vercel_config/vercel.json
          echo "Created Vercel config at ${{ runner.temp }}/vercel_config/vercel.json"

      - name: Pull Vercel Environment Information (Preview)
        run: vercel pull --yes --environment=preview --local-config ${{ runner.temp }}/vercel_config/vercel.json --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts for Vercel
        run: vercel build --local-config ${{ runner.temp }}/vercel_config/vercel.json --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project to Vercel and Get URL
        id: deploy_vercel
        run: |
          DEPLOY_URL=$(vercel deploy --prebuilt --local-config ${{ runner.temp }}/vercel_config/vercel.json --token=${{ secrets.VERCEL_TOKEN }})
          echo "Vercel Preview URL: $DEPLOY_URL"
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-v1-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-v1-

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm -C e2e/studio exec playwright install --with-deps

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ steps.deploy_vercel.outputs.DEPLOY_URL }}
          IS_PLATFORM: true
        run: pnpm e2e:ci

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: e2e/studio/playwright-report/
          retention-days: 7
